Bài 22: Khai báo nguyên mẫu hàm

1,Mục đích sử dụng
- Khai báo nguyên mẫu hàm(function prototype) hay còn gọi với tên khác là khai báo hàm. 
- Nguyên mẫu hàm chỉ chứa khai báo, gồm kiểu trả về của hàm và dấu hiệu nhận biết của hàm.
- Trong đó dấu hiệu nhận biết của hàm bao gồm tên hàm, danh sách kiểu của các tham số của hàm.
- Trình biên dịch sử dụng nguyên mẫu hàm để xác minh lời gọi hàm.
- Nếu chương trình không khai báo nguyên mẫu hàm 
  thì trình biên dịch sẽ tự tạo ra nguyên mẫu hàm từ sự xuất hiện lần đầu tiên của hàm đó kể cả trong định nghĩa hay trong lời gọi.
- Một hàm nguyên mẫu thường chỉ gồm: kiểu của hàm, tên hàm, danh sách và thứ tự tham số.
- Ví dụ:

// nguyên mẫu hàm thực hiện phép cộng 2 số thực 
double addTwoNumbers(double first, double second); 
// nguyên mẫu hàm thực hiện phép chia hai số thực
double divide(double first, double second); 

2,Cú pháp tổng quát

kiểu_hàm tên_hàm(danh_sách_tham_số);

Trong đó:
- kiểu_hàm là kiểu trả về của hàm. Có thể là bất kì kiểu dữ liệu hợp lệ nào trong C++ hoặc kiểu void.
- tên_hàm là tên của hàm. Đặt theo quy tắc đặt tên cho hàm.
- danh_sách_tham_số là các tham số có thể có của hàm. Với nguyên mẫu hàm ta chỉ cần quan tâm kiểu, số lượng và thứ tự tham số. Tên tham số có thể bỏ qua.
- Tuy nhiên, vì mục đích viết code sạch(clean code) và code chuẩn(coding conventions), ta thêm tên tham số vào để rõ mục đích, ý nghĩa của hàm.
- Ví dụ trên có thể viết lại thành:

// nguyên mẫu hàm thực hiện phép cộng 2 số thực
double addTwoNumbers(double, double); 
// nguyên mẫu hàm thực hiện phép chia hai số thực
double divide(double, double); 

3,Các đặc trưng của nguyên mẫu hàm
- Nếu nguyên mẫu hàm được khai báo ở đầu file code, bên ngoài tất cả các hàm
  thì mọi hàm trong file đó đều nhìn thấy và thực hiện lời gọi hàm đến các hàm được khai báo nguyên mẫu hàm đó.
- Khai báo theo cách trên là dành cho các hàm toàn cục(global functions).
- Nếu hàm f được khai báo nguyên mẫu trong một hàm g nào đó 
  thì chỉ hàm g này thấy và thực hiện được lời gọi đến hàm f. 
  Cách khai báo nguyên mẫu hàm này là khai báo nguyên mẫu cục bộ 
  và chỉ dành cho các hàm sử dụng lời gọi cục bộ nhằm giải quyết một vấn đề nhỏ, 
  riêng nào đó hầu như không liên quan đến các hàm khác.
- Trong khai báo nguyên mẫu, tham số chỉ cần kiểu và thứ tự, không cần có tên cụ thể. 
  Tuy nhiên nhằm mục đích code chuẩn, đẹp và chuyên nghiệp, ta bổ sung tên tham số khi khai báo nguyên mẫu hàm.
- Thường ta sẽ khai báo nguyên mẫu trong file .h hoặc .hpp của project.
- Tại nơi sử dụng các hàm đó ta chỉ cần kéo file .h đó vào qua cú pháp #include “tên_file_chứa_hàm_cần_sử_dụng.h”.

4, Phân tách file chương trình
- Trong một ứng dụng, người ta phân tách chương trình ra thành các file với các nhiệm vụ riêng để tiện quản lí và sử dụng.
- Ta thường chia chương trình thành 3 file:
- File .h còn gọi là header file hoặc thư viện chứa khai báo nguyên mẫu hàm.
- File .cpp cùng tên với file .h để thực thi các khai báo nguyên mẫu thành định nghĩa hàm hoàn chỉnh chức năng, có thể chạy được.
- File main.c chứa lời gọi đến các hàm đã được khai báo nguyên mẫu trong file .h

5,Quy ước
- Đặt tên file: tên file trong ngôn ngữ lập trình C++ thường viết thường hoàn toàn và có thể phân tách nhau bằng dấu gạch dưới _. 
  Tên file nên đặt sao cho tự nó biểu đạt ý nghĩa sử dụng của các thành phần có chứa trong file đó.
- Dùng #include<header> với các header file của hệ thống, dùng #include "header.h" với các header file lập trình viên tự viết.
- Khi định nghĩa hàm cho các khai báo nguyên mẫu trong file .h ta include file .h vào đầu file định nghĩa đó.
- Luôn #include file header hệ thống trước file header mà ta tự định nghĩa.
- Tham khảo thêm: https://google.github.io/styleguide/cppguide.html#File_Names
