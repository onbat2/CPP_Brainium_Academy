Bài 24: Gọi hàm bằng truyền tham chiếu và truyền giá trị

1,Gọi hàm bằng truyền giá trị
- Mặc định ngôn ngữ C++ khi gọi hàm truyền đối số vào hàm là truyền giá trị.
- Khi gọi hàm bằng truyền giá trị, một bản sao của đối số sẽ được tạo ra và gửi tới tham số tương ứng của hàm.
- Do đó mọi thay đổi của tham số trong hàm chứa nó sẽ chỉ làm thay đổi giá trị của bản sao 
  chứ không ảnh hưởng đến giá trị gốc của đối số, tức biến gốc được dùng làm đối số.
- Ví dụ:

// hàm tráo đổi giá trị hai tham số
void swapAB(int a, int b) {
    int x = a;
    a = b; // gán b cho a
    b = x; // gán x cho b
}

// nơi gọi hàm truyền đối số theo cách truyền giá trị
int a = 5;
int b = 9;
cout << "Gia tri goc: a = " << a << ", b = " << b << endl;
swapAB(a, b); // gọi hàm đổi chỗ a và b
cout << "Gia tri sau khi gọi hàm: a = " << a << ", b = " << b << endl;

// kết quả vẫn không đổi: a = 5, b = 9

- Trong ví dụ trên, Ta đã thực hiện gọi hàm bằng truyền giá trị. 
  Do đó bản sao của biến a, b được tạo ra và gửi đến hàm swapAB(). 
  Sau khi swapAB() thực hiện xong, giá trị của bản sao a, b đã thay đổi. 
  hưng không ảnh hưởng gì đến giá trị gốc a, b ban đầu đã sử dụng làm đối số. 
  Do đó ta thấy giá trị của a, b trước và sau gọi hàm là không đổi.

- Có thể hình dung việc gọi hàm bằng truyền giá trị giống như việc photocopy bản sao học bạ hoặc giấy tờ tùy thân. 
  Sau đó bạn gửi bản sao cho người khác. 
  Lúc này người nhận bản sao có đốt, xé, ném, vứt, bán đồng nát thì chả ảnh hưởng gì đến bản gốc giấy tờ của bạn.

2,Gọi hàm bằng truyền tham chiếu
- Khi gọi hàm bằng truyền tham chiếu, nơi thực hiện lời gọi cho phép hàm 
  được gọi truy cập trực tiếp vào địa chỉ của biến được sử dụng làm đối số trong bộ nhớ,
  do đó cho phép hàm được gọi trực tiếp thay đổi giá trị của biến.
- Mọi thay đổi(nếu có) xảy ra với tham số được dùng truyền tham chiếu, sẽ thay đổi trực tiếp giá trị của biến gốc ban đầu.
- Truyền tham chiếu chỉ áp dụng với đối số là các biến. Không áp dụng với hằng số, giá trị cụ thể.
- Nhược điểm của gọi hàm truyền giá trị là làm giảm hiệu năng của chương trình khi đối số truyền vào có kích thuớc lớn.
- Truyền tham chiếu sẽ khắc phục được nhược điểm của truyền giá trị.
- Có hai cách truyền tham chiếu trong C++. 
  + Cách thứ nhất là truyền tham chiếu theo phong cách ngôn ngữ lập trình C.
  + Cách thứ hai là tham số tham chiếu(reference parameter) của C++. Ta sẽ chủ yếu tập trung vào cách này.
- Thư viện C++ có rất nhiều hàm tham chiếu được viết sẵn. Ta cũng sẽ tìm hiểu cách để tự viết hàm tham chiếu riêng.
- Ví dụ về hàm tham chiếu ta tự định nghĩa theo phong cách ngôn ngữ lập trình C:

// hàm tráo đổi giá trị hai tham số 
void swap(int* a, int* b) {  // tham số có * ngay sau kiểu, trước tên tham số
    int x = a;  
    *a = b; // gán b cho a  
    *b = x; // gán x cho b 
} 

// nơi gọi hàm:
int a = 5; 
int b = 9; 
cout << "Gia tri goc: a = " << a << ", b = " << b << endl; // a = 5, b = 9
swap(&a, &b); // gọi hàm đổi chỗ a và b chú ý dấu & trước tên đối số 
cout << "Gia tri sau khi gọi hàm: a = " << a << ", b = " << b << endl; 

// kết quả sau khi gọi hàm tham chiếu: a = 9, b = 5

- Có thể hình dung việc gọi hàm bằng truyền tham chiếu giống như việc đưa cho người khác giấy tờ bản gốc của chúng ta. 
  Nếu họ đem cầm đồ, vứt bỏ, đốt, phá.. thì chúng ta phải chịu hậu quả vì giấy tờ sẽ bị hỏng, mất… 
  Lúc này chẳng còn giấy tờ mà dùng nên khi sử dụng truyền tham chiếu phải hết sức cẩn trọng.

- Sau đây là hàm tham chiếu ta tự định nghĩa theo phong cách C++:

// hàm tráo đổi giá trị hai tham số 
void swap(int &a, int &b) {  // tham số có dấu & ngay sau kiểu, trước tên tham số 
    int x = a;  
    a = b; // gán b cho a  
    b = x; // gán x cho b 
} 
// nơi gọi hàm: 
int a = 5; 
int b = 9; 
cout << "Gia tri goc: a = " << a << ", b = " << b << endl; // a = 5, b = 9 
swap(a, b); // gọi hàm đổi chỗ a và b
cout << "Gia tri sau khi gọi hàm: a = " << a << ", b = " << b << endl; 
// kết quả sau khi gọi hàm tham chiếu: a = 9, b = 5

3, Mục đích sử dụng
- Khi một hàm không có yêu cầu gì đặc biệt hoặc kiểu của đối số là nhỏ, ta sẽ sử dụng truyền giá trị.
- Khi muốn một hàm thực hiện chức năng nào đó có liên quan đến việc thay đổi giá trị của tham số nhận được
  hoặc kích thước của kiểu tham số là lớn thì ta viết hàm cho phép truyền tham chiếu và gọi hàm bằng truyền tham chiếu.
- Sử dụng tham chiếu còn cho phép ta thay đổi nhiều giá trị trong cùng một hàm. 
- Sử dụng truyền tham chiếu khi kết hợp với keyword const sẽ không làm thay đổi giá trị của đối số. Cụ thể ta sẽ học trong các bài về sau.

4, Cú pháp tổng quát
- Để sử dụng được hàm thì việc đầu tiên là ta phải định nghĩa hàm
- Ở đây chỉ nói đến hàm cho phép tham số tham chiếu theo phong cách C++
- Để một tham số nào đó có thể nhận địa chỉ, ta bổ sung thêm dấu & trước tên tham số trong khai báo tham số trong định nghĩa hàm
  và khai báo nguyên mẫu hàm
- Cú pháp: kiểu &tên_tham_số
- Ví dụ:

void swap(int &a, int &b) {  
    int x = a;  
    a = b;
    b = x;
}

- Để gọi hàm ta truyền tên biến vào hàm như bình thường
- Ví dụ lời gọi hàm trên là: swap(a, b);
